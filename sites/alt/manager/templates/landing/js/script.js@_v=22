/*
document.addEventListener('DOMContentLoaded', function() {
  // конечная дата, например 1 июля 2021
  const deadline = new Date(2022, 5, 8);
  // id таймера
  let timerId = null;
  // склонение числительных
  function declensionNum(num, words) {
    return words[(num % 100 > 4 && num % 100 < 20) ? 2 : [2, 0, 1, 1, 1, 2][(num % 10 < 5) ? num % 10 : 5]];
  }
  // вычисляем разницу дат и устанавливаем оставшееся времени в качестве содержимого элементов
  function countdownTimer() {
    const diff = deadline - new Date();
    if (diff <= 0) {
      clearInterval(timerId);
    }
    const days = diff > 0 ? Math.floor(diff / 1000 / 60 / 60 / 24) : 0;
    const hours = diff > 0 ? Math.floor(diff / 1000 / 60 / 60) % 24 : 0;
    const minutes = diff > 0 ? Math.floor(diff / 1000 / 60) % 60 : 0;
    const seconds = diff > 0 ? Math.floor(diff / 1000) % 60 : 0;
    $days.textContent = days < 10 ? '0' + days : days;
    $hours.textContent = hours < 10 ? '0' + hours : hours;
    $minutes.textContent = minutes < 10 ? '0' + minutes : minutes;
    $seconds.textContent = seconds < 10 ? '0' + seconds : seconds;
    $days.dataset.title = declensionNum(days, ['день', 'дня', 'дней']);
    $hours.dataset.title = declensionNum(hours, ['час', 'часа', 'часов']);
    $minutes.dataset.title = declensionNum(minutes, ['минута', 'минуты', 'минут']);
    $seconds.dataset.title = declensionNum(seconds, ['секунда', 'секунды', 'секунд']);
  }
  // получаем элементы, содержащие компоненты даты
  const $days = document.querySelector('.timer__days');
  const $hours = document.querySelector('.timer__hours');
  const $minutes = document.querySelector('.timer__minutes');
  const $seconds = document.querySelector('.timer__seconds');
  // вызываем функцию countdownTimer
  countdownTimer();
  // вызываем функцию countdownTimer каждую секунду
  timerId = setInterval(countdownTimer, 1000);
});
 */
$(function () {
  var austDay = new Date();
  austDay = new Date(2022, 5 - 1, 8);
  $('.timer.timer-1').countdown({until: austDay, compact: true, format: 'DHMs'});
});


// Колесо фортуны --------------------------------------------------

var castle = {
	endTimer: new Date(2023, 1 - 1, 1), // Дата окончания
}

$(document).ready(function() {
	updateMTimer();
	new Swiper(".swiper", { loop: !0, pagination: { el: ".swiper-pagination" } })
});

function updateMTimer() {
	const left = castle.endTimer - Date.now();
	let mtD = 0;
	let mtH = 0;
	let mtM = 0;
	let mtS = 0;
	if (left > 0) {
		let check = left;
		mtD = parseInt(left / (1000 * 60 * 60 * 24));
		mtH = parseInt(left / (1000 * 60 * 60)) % 24;
		mtM = parseInt(left / (1000 * 60)) % 60;
		mtS = parseInt(left / (1000)) % 60;
		setTimeout(updateMTimer, 1000);
	}

	let add = '';
	add = ('00' + mtD).slice(-2) + ' дн ' + ('00' + mtH).slice(-2) + ':' + ('00' + mtM).slice(-2) + ':' + ('00' + mtS).slice(-2) + ' сек';
	$('.tarif__timer').html(add);

	let mtD1 = parseInt(mtD / 10);
	let mtD2 = mtD % 10;
	let mtH1 = parseInt(mtH / 10);
	let mtH2 = mtH % 10;
	let mtM1 = parseInt(mtM / 10);
	let mtM2 = mtM % 10;
	let mtS1 = parseInt(mtS / 10);
	let mtS2 = mtS % 10;
	add = '<span>' + mtD1 + '</span><span>' + mtD2 + '</span>дн<br><span>' + mtH1 + '</span><span>' + mtH2 + '</span>:<span>' + mtM1 + '</span><span>' + mtM2 + '</span>' + '</span>:<span>' + mtS1 + '</span><span>' + mtS2 + '</span>сек'
	$('.block-1__timer').html(add);
}
